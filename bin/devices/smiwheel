#!/usr/bin/env python

# ====================================================================== #
#  __    _      ___       _____  __    _              _               _  #
# / _\  /_\    / _ \/\  /\\_   \/__\  /_\   __      _| |__   ___  ___| | #
# \ \  //_\\  / /_)/ /_/ / / /\/ \// //_\\  \ \ /\ / / '_ \ / _ \/ _ \ | #
# _\ \/  _  \/ ___/ __  /\/ /_/ _  \/  _  \  \ V  V /| | | |  __/  __/ | #
# \__/\_/ \_/\/   \/ /_/\____/\/ \_/\_/ \_/   \_/\_/ |_| |_|\___|\___|_| #
#                                                                        #
# ====================================================================== #


import sys
import os
import time
import pdb

home = os.getenv('HOME')
sys.path.append(home+'/src/lib/python/')
import wheel
import logit
import subprocess

whldev = "/dev/serial/by-id/"
whldev += "usb-Thorlabs_FW102C_Filter_Wheel_FWUADEL2-if00-port0"



def usage():
    print """---------------------------------------
examples:\n--------
    smiwheel ?       # gives last wheel position sent to
    smiwheel status  # gives last wheel position sent to
    smiwheel 1       # sends wheel to position 1\n
Filter list:\n-----------
    1. 1250 nm, 25 nm BW 
    2. 1300 nm, 25 nm BW
    3. 1350 nm, 25 nm BW
    4. 1550 nm, 25 nm BW
    5. 1610 nm, 12 nm BW
    6. 1500 nm, 25 nm BW
"""

# ---------------------------


def main():
    args = sys.argv[1:]  # list of read arguments
    na = args.__len__()  # number of arguments
    quiet = True

    if args == []: 
        usage()
        sys.exit()

    if (na == 1):
        if (("?" in args[0].lower()) or ("st" in args[0].lower())):
            whl = wheel.wheel(whldev)
            print("Last stored position = %c" %(whl.saved(),))
            #subprocess.call(["scexaostatus","set", "saphfwpos", str(whl.saved())])
            whl.close()
        elif (args[0].isdigit() and (1 <= int(args[0]) <= 6)):
            whl = wheel.wheel(whldev)
            whl.goto(args[0])
            whl.close()
            #subprocess.call(["scexaostatus","set", "saphfwpos", str(args[0])])
            logit.logit('SMI_fwheel','moved_to_slot_'+str(args[0]))
        else:
            print("Wheel only has 6 positions")
            sys.exit()
    else:
        usage()

if __name__ == "__main__":
    main()



