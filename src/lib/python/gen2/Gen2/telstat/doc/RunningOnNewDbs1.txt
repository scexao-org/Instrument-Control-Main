RunningOnMdbs1.txt -- Bruce Bon -- 2008-08-26

Cribsheet on running TelStat on new dbs1, using either FAI simulator data or 
real summit data

_______________________________________________________

Running an existing version of TelStat on new dbs1, displaying to a remote host:

1. Log onto new dbs1 using "ssh -Y", any account (e.g. bon)

2. From the login window:

        > echo $DISPLAY
        localhost:11.0
        > cp .Xauthority foo
        > chmod go+r foo

3. From the login window:

        > su - o98003

   and provide the password.

   vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
   IMPORTANT NOTE: you cannot change shells (e.g. to tcsh or bash) or Python 
   will fail with something like the following traceback:

   Traceback (most recent call last):
     File "OSSO_TelStat", line 303, in ?
       root = Tkinter.Tk()
     File "/opt/share/ssd/lib/python2.3/lib-tk/Tkinter.py", line 1564, in __init__
       self.tk = _tkinter.create(screenName, baseName, className)
   _tkinter.TclError: invalid command name "tcl_findLibrary"

   It hangs at this point and you have to kill the python process from another
   window -- control/C doesn't work.
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

4. Set the o98003 DISPLAY variable to the value from step 2, and 
   merge foo into .Xauthority:

        > setenv DISPLAY localhost:11.0
        > xauth merge /home/bon/foo

5. Change to the TelStat directory, e.g.:

        > cd /home/bon/TelStat-RL2_1_9

6. Set up Python environment:

        > setenv PYTHONPATH  OSSO_TelStatLib:/opt/share/ssd/python251/lib/python2.5/site-packages
        > setenv LD_LIBRARY_PATH /opt/share/ssd/tcl84/lib:${LD_LIBRARY_PATH}:/opt/share/ssd/lib
        #> setenv PATH .:${PATH}:/opt/share/ssd/bin
        > setenv PATH /opt/share/ssd/bin:.:${PATH}

   Or, to get the same environment used by OSSO_TelStat.sh:

        > source /home/bon/pytest/optshr.cshenv

7. By default, OSS_OBS_HOST will be set to new obs1 for FAI simulator data.
   If this is what you want, just run TelStat, e.g.:

        > OSSO_TelStat

            OR

        > OSSO_TelStat -l -d        # data logging, debug mode

8. If you want summit data:

        > setenv OSS_OBS_HOST 192.168.101.1    (IP address of old Summit obs1)
        > OSSO_TelStat

            OR

        > OSSO_TelStat -l -d        # data logging, debug mode

NOTE:  Log files generated by TelStat will now go into the
        /app/OSS/LOCAL/OSS_PRGLOG directory, which is local to
        each workstation.
_______________________________________________________

If you want to check out status acquisition via OSSC_screenPrint,
you may follow steps 1-4 above and then execute commands such as:

    > OSSC_screenPrint STATL.TELDRIVE TSCV.FOCUSINFO
    > OSSC_screenPrint TSCS.ALPHA TSCS.DELTA TSCS.AZ TSCS.EL

If you want to see Summit data, do this first:

    > setenv OSS_OBS_HOST 192.168.101.1    (IP address of old Summit obs1)

_______________________________________________________

Running an existing version of TelStat on new dbs1 from a SOSS3 build
directory, displaying to a remote host:

1. Log onto new dbs1 using "ssh -Y", any account (e.g. bon)

2. From the login window:

        > echo $DISPLAY
        localhost:11.0
        > cp .Xauthority foo
        > chmod go+r foo

3. From the login window:

        > su - o98003

   and provide the password.

   vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
   IMPORTANT NOTE: you cannot change shells (e.g. to tcsh or bash) or Python 
   will fail with something like the following traceback:

   Traceback (most recent call last):
     File "OSSO_TelStat", line 303, in ?
       root = Tkinter.Tk()
     File "/opt/share/ssd/lib/python2.3/lib-tk/Tkinter.py", line 1564, in __init__
       self.tk = _tkinter.create(screenName, baseName, className)
   _tkinter.TclError: invalid command name "tcl_findLibrary"

   It hangs at this point and you have to kill the python process from another
   window -- control/C doesn't work.
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

4. Set the o98003 DISPLAY variable to the value from step 2, and 
   merge foo into .Xauthority:

        > setenv DISPLAY localhost:11.0
        > xauth merge /home/bon/foo

5. Change to the TelStat directory, e.g.:

        > cd /home/bon/Svn/soss3_080305/product/OSSO/OSSO_TelStat.d

6. Set OSS_LOAD_MODULE to point at this directory instead of /app/LOAD/DEBUG:

        > setenv OSS_LOAD_MODULE \
                    /home/bon/Svn/soss3_080305/product/OSSO/OSSO_TelStat.d

7. By default, OSS_OBS_HOST will be set to new obs1 for FAI simulator data.
   If this is what you want, just run the TelStat shell script, e.g.:

        > OSSO_TelStatus.sh

            OR

        > OSSO_TelStatus.sh -l -d      # data logging, debug mode

8. If you want summit data:

        > setenv OSS_OBS_HOST 192.168.101.1    (IP address of old Summit obs1)
        > OSSO_TelStatus.sh

            OR

        > OSSO_TelStatus.sh -l -d      # data logging, debug mode

NOTE:  Log files generated by TelStat will now go into the
        /app/OSS/LOCAL/OSS_PRGLOG directory, which is local to
        each workstation.
