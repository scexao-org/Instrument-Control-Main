#!/usr/bin/env python

# ==================================================================== #
#    ___         _      __   _____  __              _               _  #
#   / __\ /\  /\/_\    /__\  \_   \/ _\   __      _| |__   ___  ___| | #
#  / /   / /_/ //_\\  / \//   / /\/\ \    \ \ /\ / / '_ \ / _ \/ _ \ | #
# / /___/ __  /  _  \/ _  \/\/ /_  _\ \    \ V  V /| | | |  __/  __/ | #
# \____/\/ /_/\_/ \_/\/ \_/\____/  \__/     \_/\_/ |_| |_|\___|\___|_| #
#                                                                      #
# ==================================================================== #

import serial
import os
import time
import binascii
import sys
import pdb
import subprocess


delay=0.5
#45 degrees ~ 45 unitsimport sys

home = os.getenv('HOME')
sys.path.append(home+'/src/lib/python/')
import logit #Custom logging library

import conex
con=conex.conex()

#CONEX wheel 5
WN=5

cid = '/dev/serial/by-id/usb-FTDI_USB-RS422_Cable_FTZ3126R-if00-port0'
#cid = False

def usage():
    print """---------------------------------------
Usage: fwheelb <command> <arg>
---------------------------------------
command:\n-------
    status     displays camera status
    home       sends the camera home
    goto       moves camera to position:
               numerical value 
arg:\n---
    1 - 8 (wheel slot position)\n
examples:\n--------
    fwheelb home
    fwheelb goto 2
    fwheelb status
contents:\n--------
    1 AR-coated window (0.9-2.6 um)
    2 Open
    3 50/50 splitter (0.9-2.6 um)
    4 R90/T10 (0.9-2.6 um) (default)
    5 R10/T90 (0.9-2.6 um)
    6 Open
    7 Open 
    8 Gold mirror
--------------------------------------- """
    sys.exit()


# =====================================================================
# =====================================================================
def main():
    args = sys.argv[1:]  # list of read arguments
    na = args.__len__()  # number of arguments

    if args == []: usage()

    if ("?" in args[0].lower()) or ("st" in args[0].lower()):
        con.open(WN, cid)
        con.status()
        con.close()
        sys.exit()
    
    elif "goto" in args[0].lower():  #Goto commands
        if na < 2:
            usage()
        elif args[1].isdigit(): 
            if (1 <= int(args[1]) <= 8):
                con.open(WN, cid)
                if int(args[1])==1:
                    con.move(0.00)
                elif int(args[1])==2:
                    con.move(45.15)
                elif int(args[1])==3:
                    con.move(90.00)
                elif int(args[1])==4:
                    con.move(135.00)
                elif int(args[1])==5:
                    con.move(180.00) 
                elif int(args[1])==6:
                    con.move(225.00)  #Needs to be set
                elif int(args[1])==7:
                    con.move(270.00)  #Needs to be set
                elif int(args[1])==8:
                    con.move(315.00)  #Needs to be se
                con.close()
                subprocess.call(["scexaostatus","set", "scibspos", str(args[1])])
                logit.logit('Fwheelb','moved_to_slot_'+str(args[1]))
            else:
                print("Wheel only has 8 positions")
        else:
            print("Select a slot between 1 and 8")
        sys.exit()
    
    elif "home" in args[0].lower():   #Home command
        con.open(WN, cid)
        con.home()
        con.close()
        subprocess.call(["scexaostatus","set", "scibspos", str(args[0])])
        logit.logit('Fwheelb','moved_to_slot_1')
        sys.exit()
    
    else:
        usage()            

if __name__ == "__main__":
    main()
