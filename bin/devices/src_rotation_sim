#!/usr/bin/env python


# ------------------------------------------------------- #
#    ___  ___   ________   _____                     _    #
#   / _ \/ __\ / __\_   \ /__   \__ _ _ __ __ _  ___| |_  #
#  / /_)/ /   / _\  / /\/   / /\/ _` | '__/ _` |/ _ \ __| #
# / ___/ /___/ / /\/ /_    / / | (_| | | | (_| |  __/ |_  #
# \/   \____/\/  \____/    \/   \__,_|_|  \__, |\___|\__| #
#                                         |___/           #
#  _____                _    _                            #
# /__   \_ __ __ _  ___| | _(_)_ __   __ _                #
#   / /\/ '__/ _` |/ __| |/ / | '_ \ / _` |               #
#  / /  | | | (_| | (__|   <| | | | | (_| |               #
#  \/   |_|  \__,_|\___|_|\_\_|_| |_|\__, |               #
#                                    |___/                #
#                                                         #
# ------------------------------------------------------- #

import numpy as np
import os,sys,time
import matplotlib.pyplot as plt
import math as m
from xaosim.scexao_shmlib import shm

home = os.getenv('HOME')
sys.path.append(home+'/src/lib/python/')
import image_processing as impro
import vibration as vib
import conex3 as conex
con = conex.conex()

plt.ion()

hmsg = """
-------- PCFI target tracking ---------

Usage: pcfi_track <separation> <PA> <fiber_type>

INPUT <separation> : Separation between star and target
INPUT <PA>         : Position angle in degrees (0deg: North, 90deg: East)
INPUT <fiber_type> : (OPTIONAL)  fiber injection type ("mmf" or "smf" (default))
EXAMPLE :  pcfi_track 0.2 135 

for any questions, ask Julien Lozi (lozi@naoj.org).
"""

args = sys.argv[1:]
if len(args) < 2:
    print(hmsg)
else:
    try:
        sep = float(args[0])
        pa = float(args[1])
    except:
        print(hmsg)

# ------------------------------------------------------------------
#             files and shared memory
# ------------------------------------------------------------------

conexidx = "/dev/serial/by-id/usb-Newport_CONEX-AGP_A60QY9WJ-if00-port0"
conexidy = "/dev/serial/by-id/usb-Newport_CONEX-AGP_A6XTSLMS-if00-port0"

telescope_status = shm("/tmp/telescope_status.im.shm", verbose=False)

fibpos_file = "/home/scexao/bin/devices/conf/conf_src_fib.txt"

scale = 1.94 #arcsec/mm


f = open(fibpos_file,'r')
f2 = f.readlines()
f.close()
pos0 = np.zeros((2,2))
for i in range(2):
    pos0[:,i] = [s.split(';')[2+i].rstrip() for s in f2 if s.split(';')[2+i].rstrip()]

x0 = pos0[0,0]
y0 = pos0[0,1]

cnt0 = telescope_status.get_counter()

while True:
    cnt = telescope_status.get_counter()
    if cnt == cnt0:
        time.sleep(1)
    else:
        cnt0 = cnt
        temp = telescope_status.get_data()
        pad = temp[0][4]
        print(pad)
        xt = +sep/scale*m.cos(m.radians(pad-pa))
        yt = +sep/scale*m.sin(m.radians(pad-pa))
        print(xt, yt)
        
        con.open(conexidx)
        con.move(x0+xt, "", False)
        con.close()
        #os.system("pcfi_fib x goto %f" % (x0+xt))

        con.open(conexidy)
        con.move(y0+yt, "", False)
        con.close()
        #os.system("pcfi_fib y goto %f" % (y0+yt))
