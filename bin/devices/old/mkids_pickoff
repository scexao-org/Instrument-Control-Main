#!/usr/bin/env python

# ================================================================== #
#                 _____  ___  __           _      _          __  __  #
#   /\/\    /\ /\ \_   \/   \/ _\    _ __ (_) ___| | _____  / _|/ _| #
#  /    \  / //_/  / /\/ /\ /\ \    | '_ \| |/ __| |/ / _ \| |_| |_  #
# / /\/\ \/ __ \/\/ /_/ /_// _\ \   | |_) | | (__|   < (_) |  _|  _| #
# \/    \/\/  \/\____/___,'  \__/   | .__/|_|\___|_|\_\___/|_| |_|   #
#                                   |_|                              #
#                                                                    #
# ================================================================== #

import os
import sys

home = os.getenv('HOME')
sys.path.append(home+'/src/lib/python/')
import logit #Custom logging library
import conex2 as conex
con = conex.conex()

# SPECIFIC PARAMETERS FOR THIS WHEEL

cid = "/dev/serial/by-id/"
cid += "usb-Newport_CONEX-AGP_A6Z9GKLH-if00-port0"

conexname = "mkids_pickoff"

# GENERIC CODE

filename = "/home/scexao/bin/devices/conf/conf_"+conexname+".txt"

slots = [line.rstrip('\n') for line in open(filename)]
nslots = len(slots)
nparam = len(slots[0].split(';'))
for i in range(nparam):
    exec "param%d = []" % (i,)

for j in range(nslots):
    sparam = slots[j].split(';')
    for i in range(nparam):
        exec "param%d.append(sparam[i])" % (i,)

def usage():
    print """---------------------------------------
Usage: %s <command> <arg>
---------------------------------------
COMMAND:
    status     displays status
    home       sends home
    goto       moves position: numerical value
ARG:
    1 - %d (wheel slot position)
EXAMPLES:
    %s home
    %s goto 5 (change wheel slot)
CONTENT:""" % (conexname,nslots,conexname,conexname)
    for i in range(nslots):
        print "   ", param0[i], param1[i]
        
    print "--------------------------------------- "
    sys.exit()

def quickhelp():
    print "%20s       MKIDS/HiCIAO pickoff mirror" % (conexname,)

# =====================================================================
# =====================================================================
def main():
    args = sys.argv[1:]  # list of read arguments
    na = args.__len__()  # number of arguments

    if args == []: usage()

    else:
        if "--help1" in args[0].lower():
            quickhelp()

        elif "home" in args[0].lower():   #Home command
            con.open(cid, conexname)
            con.home(conexname)
            con.close()
            logit.logit(conexname,'Homed')
            sys.exit()
            
        elif ("?" in args[0].lower()) or ("st" in args[0].lower()):
            con.open(cid, conexname)
            con.status(conexname)
            con.close()
            sys.exit()
            
        elif "goto" in args[0].lower():  #Goto commands
            if na < 2:
                usage()
            elif args[1].isdigit():
                slot = int(args[1])
                if (1 <= slot <= nslots):
                    con.open(cid, conexname)
                    pos = param2[slot-1]
                    con.move(float(pos), conexname)
                    con.close()
                    logit.logit(conexname,'moved_to_slot_'+str(slot))
                else:
                    print("Wheel only has "+str(nslots)+" positions")
                    
            else:
                print("Select a slot between 1 and "+str(nslots))
            sys.exit()
        else:
            usage()

if __name__ == "__main__":
    main()

