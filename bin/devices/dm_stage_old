#!/usr/bin/env python

# ================================================== #
#                 DM control                         #
# ================================================== #

import sys
import os
import time
import pdb


home = os.getenv('HOME')
sys.path.append(home+'/src/lib/python/')
import ezstep_chain3 as ezstep_chain
import logit #Custom logging library


ttmdev  = "/dev/serial/by-path/"
ttmdev += "pci-0000:00:1d.0-usb-0:1.8.2:1.0-port0"
# all steppers now connected together

stagename = "dm_stage"

def usage():
    print("""---------------------------------------
Usage: %s <dev> <command> <arg>
---------------------------------------
dev:\n---
    x          horizontal axis
    y          vertical axis 
command:\n-------
    status     displays stage status
    push       pushes stage by #steps
               numerical value 
arg:\n---
    numerical value (zaber steps)
examples:\n--------
    %s reset
    %s x push +340 (relative move
    %s y push -413  only!        )
--------------------------------------- """% (stagename,stagename,stagename,stagename))

def quickhelp():
    print("%20s       DM stage" % (stagename,))

# =====================================================================
# =====================================================================
def main():
    args = sys.argv[1:]  # list of read arguments
    na = args.__len__()  # number of arguments

    if args == []: usage()

    if "--help1" in args[0].lower():
        quickhelp()

    elif "reset" in args[0].lower():
        # re-init the stepper parameters
        ttm = ezstep_chain.ezstep_chain(ttmdev)
        ttm.init_tts(quiet=False)
        time.sleep(1)
        ttm.close()

        print("NOTHING YET")
        sys.exit()

    # what dof are we actuating?
    elif ("x" in args[0].lower()) or ("y" in args[0].lower()):
        if "x" in args[0].lower():
            idn = 2
        elif "y" in args[0].lower():
            idn = 1
        else:
            usage()
        
        if na < 2: # safety
            usage()
            
        if "stat" in args[1].lower():
            ttm = ezstep_chain.ezstep_chain(ttmdev)
            position = ttm.current_pos(idn)
            ttm.close()
            print("Axis %s (idn=%d): pos = %d" % (args[0], idn, position))
            
        elif "push" in args[1].lower():
            if na < 3: # safety
                usage()
                
            try:
                dpos = int(args[2])
            except:
                usage()
                
            print("delta = %d" % (dpos,))
            ttm = ezstep_chain.ezstep_chain(ttmdev)
            ttm.dmove(idn, dpos)
            ttm.close()
            logit.logit(stagename+'_'+str(args[0])+'_axis','moved_to_'+str(dpos))
            
        else:
            usage()
    else:
        usage()

if __name__ == "__main__":
    #ttm = ezstep_chain.ezstep_chain(ttmdev)
    main()
