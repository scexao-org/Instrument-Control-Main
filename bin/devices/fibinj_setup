#!/bin/bash

tempfile=`tempfile 2>/dev/null` || tempfile=/tmp/test_smi$$
trap "rm -f $tempfile" 0 1 2 5 15

# ===============================================================
# READ POSITIONS

echo "reading PIAA1 positions"
filep1="/home/scexao/bin/devices/conf/conf_piaa1.txt"
nlp1=$(cat $filep1 | wc -l)
IFS=$'\n'
declare -a np1
declare -a dp1
declare -a ap1
declare -a xp1
declare -a yp1
declare -a cp1
i=1
for line in `cat $filep1`
do
    np1[$i]=`echo $line |cut -d\; -f1`
    dp1[$i]=`echo $line |cut -d\; -f2`
    ap1[$i]=`echo $line |cut -d\; -f3`
    xp1[$i]=`echo $line |cut -d\; -f4`
    yp1[$i]=`echo $line |cut -d\; -f5`
    cp1[$i]=`echo $line |cut -d\; -f6`
    i=$(($i+1))
done

echo "reading PIAA2 positions"
filep2="/home/scexao/bin/devices/conf/conf_piaa2.txt"
nlp2=$(cat $filep2 | wc -l)
IFS=$'\n'
declare -a np2
declare -a dp2
declare -a ap2
declare -a xp2
declare -a yp2
declare -a fp2
declare -a cp2
i=1
for line in `cat $filep2`
do
    np2[$i]=`echo $line |cut -d\; -f1`
    dp2[$i]=`echo $line |cut -d\; -f2`
    ap2[$i]=`echo $line |cut -d\; -f3`
    xp2[$i]=`echo $line |cut -d\; -f4`
    yp2[$i]=`echo $line |cut -d\; -f5`
    fp2[$i]=`echo $line |cut -d\; -f6`
    cp2[$i]=`echo $line |cut -d\; -f7`
    i=$(($i+1))
done

echo "reading Fibers positions"
files="/home/scexao/bin/devices/conf/conf_fibinj_fib.txt"
nls=$(cat $files | wc -l)
IFS=$'\n'
declare -a ns
declare -a ds
declare -a xs
declare -a ys
declare -a fs
declare -a ss
declare -a cs
i=1
for line in `cat $files`
do
    ns[$i]=`echo $line |cut -d\; -f1`
    ds[$i]=`echo $line |cut -d\; -f2`
    xs[$i]=`echo $line |cut -d\; -f3`
    ys[$i]=`echo $line |cut -d\; -f4`
    fs[$i]=`echo $line |cut -d\; -f5`
    ss[$i]=`echo $line |cut -d\; -f6`
    cs[$i]=`echo $line |cut -d\; -f7`
    i=$(($i+1))
done

echo "reading Carriage positions"
filec="/home/scexao/bin/devices/conf/conf_fibinj_car.txt"
nlc=$(cat $filec | wc -l)
IFS=$'\n'
declare -a nc
declare -a dc
declare -a fc
i=1
for line in `cat $files`
do
    nc[$i]=`echo $line |cut -d\; -f1`
    dc[$i]=`echo $line |cut -d\; -f2`
    fc[$i]=`echo $line |cut -d\; -f3`
    i=$(($i+1))
done

echo "reading Spectro fibers positions"
filei="/home/scexao/bin/devices/conf/conf_irspectro_fib.txt"
nli=$(cat $filei | wc -l)
IFS=$'\n'
declare -a ni
declare -a di
declare -a xi
declare -a yi
declare -a ci
i=1
for line in `cat $filei`
do
    ni[$i]=`echo $line |cut -d\; -f1`
    di[$i]=`echo $line |cut -d\; -f2`
    xi[$i]=`echo $line |cut -d\; -f3`
    yi[$i]=`echo $line |cut -d\; -f4`
    ci[$i]=`echo $line |cut -d\; -f5`
    i=$(($i+1))
done

echo "reading Spectro fibers focus"
filej="/home/scexao/bin/devices/conf/conf_irspectro_col.txt"
nlj=$(cat $filej | wc -l)
IFS=$'\n'
declare -a nj
declare -a df
declare -a fj
declare -a cj
i=1
for line in `cat $filej`
do
    nj[$i]=`echo $line |cut -d\; -f1`
    dj[$i]=`echo $line |cut -d\; -f2`
    fj[$i]=`echo $line |cut -d\; -f3`
    cj[$i]=`echo $line |cut -d\; -f4`
    i=$(($i+1))
done

#=======================================================================
# =================== STATE MACHINE ====================================

state="menuconfselect"


fibnbmax=$nls
fibnb=0
fibselected=1

menuconfmanage_default=0


echo "START STATE MACHINE"

while true; do

    stateok=0

    # ================================================================
    # CHOOSE CONFIGURATION INDEX
    if [ $state = "menuconfselect" ]; then
	stateok=1
	
	fibselected=$(cat "/home/scexao/bin/devices/conf/current_SMINUMBER.txt")
	
	menuname="CONFIGURATION MENU\n [Active conf = ${fibselected}]"
	menuitems=()
	for i in `seq 1 ${fibnbmax}`;
	do
	    menuitems+=( "${ns[i]}" "${ds[i]}" )
	done
	menuitems+=( "-" "")
	menuitems+=( "C" "Configurations")
	
	dialog --title "Select Fiber" \
	    --ok-label "Configure" \
	    --cancel-label "Remove" \
	    --help-button --help-label "Exit" \
	    --default-item ${fibselected} \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	fibnb=$(cat $tempfile)
	
	case $retval in
	    0) state="menuconfmanage";; # button 1: configure
	    1) state="menuconfremove";;  # button 3: Top
	    2) state="menuexit";; # button 4: Exit
	    255) ;;#state="menuexit";;
	esac
	
	if [ $state = "menuconfmanage" ]; then
	    case $fibnb in
		-) ;;
		C) state="menuconfselect";;
	    esac
	fi
    fi

    # ============================================================
    #  CONFIGURATION SETUP MENU
    if [ $state = "menuconfmanage" ]; then
	stateok=1
	
	fibselected=${fibnb}
	
	echo $fibselected > "/home/scexao/bin/devices/conf/current_SMINUMBER.txt"
	echo $fibselected
	sleep 5
 	if [ $fibselected != 6 ]; then
	menuitems=( "00" "Move PIAA1 in")
	menuitems+=( "01" "Manual PIAA1 alignment")
	menuitems+=( "02" "Move PIAA2 in")
	menuitems+=( "03" "Manual PIAA2 alignment")
	menuitems+=( "-" "")
	menuitems+=( "04" "Move fiber in")
	menuitems+=( "05" "Manual Fiber alignment")
	menuitems+=( "06" "Manual Carriage translation")
	menuitems+=( "-" "")
	menuitems+=( "07" "Move pickoff out")
	menuitems+=( "08" "Move PIAA out")
	else
	menuitems=( "04" "Move pickoff in")
	menuitems+=( "-" "")
	menuitems+=( "07" "Move pickoff out")
	fi
	menuitems+=( "-" "")
	menuitems+=( "09" "IRSPECTRO photometric mode")
	menuitems+=( "10" "IRSPECTRO spectroscopic mode")
	menuitems+=( "11" "Manual Fiber alignment")
	menuitems+=( "12" "IRSPECTRO out")
	menuitems+=( "-" "")
	menuitems+=( "C" "Configurations" )
	
	dialog --title "SMI alignment" \
	    --ok-label "Select" \
	    --extra-button --extra-label "Back" \
	    --cancel-label "Main" \
	    --help-button --help-label "Exit" \
	    --default-item $menuconfmanage_default \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	choiceval=$(cat $tempfile)
	case $retval in
	    0)  # button 1:
		menuconfmanage_default=$choiceval
		case $choiceval in
		    -);;
   		    00) 
			# moving PIAA1 wheel
			echo "moving PIAA1 in"
			log "SMI: moving PIAA1 in"
			piaa1 4
			
			state="menuconfmanage";;
		    01)
			state="menuconf_p1align"
			log "SMI: Manually aligning PIAA1"
			manualpiaa1align=0;;
		    02)
			# moving PIAA2 wheel
			echo "moving PIAA2 in"
			log "SMI: moving PIAA2 in"
			piaa2 4
			
			state="menuconfmanage";;
		    03) 
			state="menuconf_p2align"
			log "SMI: Manually aligning PIAA2"
			manualpiaa2align=0;;
		    04)
			echo "moving pickoff in"
			log "SMI: moving pickoff in"
			photonics_pickoff in
			sleep 0.1
			if [ $fibselected != 6 ]; then
			fibinj_pickoff in
			sleep 0.1
			fibinj_len pl
			sleep 0.1
			fibinj_fib x $fibnb
			sleep 0.1
			fibinj_fib y $fibnb
			sleep 0.1
			fibinj_fib f $fibnb
			sleep 1
			fibinj_fib status
			fi
			state="menuconfmanage";;
		    05)
			state="menuconf_fiberalign"
			log "SMI: Manually aligning the Fiber"
			manualfiberalign=0;;
		    06)
			state="menuconf_carriage"
			log "SMI: Manually translating the carriage"
			manualfiberalign=0;;
		    07)
			echo "moving pickoff out"
			photonics_pickoff out
			if [ $fibselected != 6 ]; then
			fibinj_pickoff out
			fi
			log "SMI: moving pickoff out"
			state="menuconfmanage";;
		    08)
			echo "moving PIAA out"
			piaa1 7
			piaa2 7
			log "SMI: moving the PIAA out"
			state="menuconfmanage";;
		    09)
			echo "moving IR spectrograph in photometric mode"
			irspectro_mode photo
			sleep 0.1
			irspectro_fib x ${ss[$fibnb]}
			sleep 0.1
			irspectro_fib y ${ss[$fibnb]}
			sleep 0.1
			irspectro_col ${ss[$fibnb]}
			sleep 1
			irspectro_fib status
			state="menuconfmanage";;
			10)
			echo "moving IR spectrograph in spectrometric mode"
			irspectro_mode spectro
			sleep 0.1
			irspectro_fib x ${ss[$fibnb]}
			sleep 0.1
			irspectro_fib y ${ss[$fibnb]}
			sleep 0.1
			irspectro_col ${ss[$fibnb]}
			sleep 1
			irspectro_fib status
			state="menuconfmanage";;
			11)
			state="menuconf_spectrofibalign"
			log "SMI: Manually aligning the IR Spectrometer Fiber"
			spectrofibalign=0;;
			12)
			echo "moving IR spectrograph out"
			irspectro_mode out
			sleep 0.1
			state="menuconfmanage";;

		    C) state="menuconfselect";;  
		esac;;
	    3) state="menuconfselect";; # "Back" button
	    1) state="menuconfselect";; # "Main" button
	    2) state="menuexit";; # "Exit" button
	    255) ;;#state="menuexit";;
	esac
    fi

    # ==========================================================
    #  MANUAL ALIGNMENT PIAA1 
    if [ $state = "menuconf_p1align" ]; then
	stateok=1
	menuname="MANUAL ALIGNMENT PIAA1"
	
	file="/home/scexao/bin/devices/conf/current_piaa1amp.txt"
	if [ -a $file ]
	then
	    piaa1amp=$(echo "$(cat $file)")
	else
	    piaa1amp="?"
	fi
	
	
	menuitems=(  "0" "Amplitude : $piaa1amp steps")
	menuitems+=( "-" "")
	menuitems+=( "1" "Move up")
	menuitems+=( "2" "Move down")
	menuitems+=( "3" "Move left")
	menuitems+=( "4" "Move right")
	
	dialog --title "PIAA1 manual alignment" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item $manualpiaa1align \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	choiceval=$(cat $tempfile)
	
	case $retval in
	    0) 	manualpiaa1align=$choiceval
		case $choiceval in
		    -) ;;
  		    0) state="menuconf_p1amp";;
		    1)
			((yp1[4]+=$piaa1amp))
			piaa1 y goto ${yp1[4]}
			sleep 0.1
			state="menuconf_p1align";;
		    2)
			((yp1[4]-=$piaa1amp))
			piaa1 y goto ${yp1[4]}
			sleep 0.1
	  		state="menuconf_p1align";;
		    3)
			((xp1[4]+=$piaa1amp))
			piaa1 x goto ${xp1[4]}
			sleep 0.1
			state="menuconf_p1align";;
		    4)
			((xp1[4]-=$piaa1amp))
			piaa1 x goto ${xp1[4]}
			sleep 0.1
			state="menuconf_p1align";;
		esac
		;;
	    1) 
		log "SMI: PIAA1 aligned"
		state="menuconf_savep1";; 
	    2) state="menuexit";;
	    255) ;;#state="menuexit";;
	esac
	
    fi

    # ==========================================================
    #  AMPLITUDE ALIGNMENT PIAA1 
    if [ $state = "menuconf_p1amp" ]; then
	stateok=1
	menuname="AMPLITUDE ALIGNMENT PIAA1"
	
	file="/home/scexao/bin/devices/conf/current_piaa1amp.txt"
	if [ -a $file ]
	then
	    piaa1amp=$(echo "$(cat $file)")
	else
	    piaa1amp="?"
	fi
	
	menuitems=( "10000" " 10000 steps")
	menuitems+=( "5000" " 5000 steps")
	menuitems+=( "2000" " 2000 steps")
	menuitems+=( "1000" " 1000 steps")
	menuitems+=( "500" " 500 steps")
	menuitems+=( "200" " 200 steps")
	menuitems+=( "100" " 100 steps")
	menuitems+=( "50" " 50 steps")
	menuitems+=( "20" " 20 steps")
	menuitems+=( "10" " 10 steps")
	menuitems+=( "5" " 5 steps")
	menuitems+=( "2" " 2 steps")
	menuitems+=( "1" " 1 steps")
	
	dialog --title "Amplitude alignment PIAA1" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item ${piaa1amp} \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	
	case $retval in
	    0)piaa1amp=$(cat $tempfile)
		echo "$piaa1amp" > /home/scexao/bin/devices/conf/current_piaa1amp.txt
		state="menuconf_p1align";; 
	    1) state="menuconfmanage";; 
	    2) state="menuexit";;
	    255) ;;#state="menuexit";;
	esac
    fi

    # ==========================================================
    #  MANUAL ALIGNMENT PIAA2 
    if [ $state = "menuconf_p2align" ]; then
	stateok=1
	menuname="MANUAL ALIGNMENT PIAA2"
	
	file="/home/scexao/bin/devices/conf/current_piaa2amp.txt"
	if [ -a $file ]
	then
	    piaa2amp=$(echo "$(cat $file)")
	else
	    piaa2amp="?"
	fi
	
	
	menuitems=(  "0" "Amplitude : $piaa2amp steps")
	menuitems+=( "-" "")
	menuitems+=( "1" "Move up")
	menuitems+=( "2" "Move down")
	menuitems+=( "3" "Move left")
	menuitems+=( "4" "Move right")
	menuitems+=( "5" "Move focus in")
	menuitems+=( "6" "Move focus out")
	
	dialog --title "PIAA2 manual alignment" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item $manualpiaa2align \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	choiceval=$(cat $tempfile)
	
	case $retval in
	    0) 	manualpiaa2align=$choiceval
		case $choiceval in
		    -) ;;
  		    0) state="menuconf_p2amp";;
		    1)
			((yp2[4]-=$piaa2amp))
			piaa2 y goto ${yp2[4]}
			sleep 0.1
			state="menuconf_p2align";;
		    2)
			((yp2[4]+=$piaa2amp))
			piaa2 y goto ${yp2[4]}
			sleep 0.1
			state="menuconf_p2align";;
		    3)
			((xp2[4]-=$piaa2amp))
			piaa2 x goto ${xp2[4]}
			sleep 0.1
			state="menuconf_p2align";;
		    4)
			((xp2[4]+=$piaa2amp))
			piaa2 x goto ${xp2[4]}
			sleep 0.1
			state="menuconf_p2align";;
		    5)
			((fp2[4]-=$piaa2amp))
			piaa2 f goto ${fp2[4]}
			sleep 0.1
			state="menuconf_p2align";;
		    6)
			((fp2[4]+=$piaa2amp))
			piaa2 f goto ${fp2[4]}
			sleep 0.1
			state="menuconf_p2align";;
		esac
		;;
	    1)
		log "SMI: PIAA2 aligned"
		state="menuconf_savep2";; 
	    2) state="menuexit";;
	    255) ;; #state="menuexit";;
	esac
	
    fi

    # ==========================================================
    #  AMPLITUDE ALIGNMENT PIAA2
    if [ $state = "menuconf_p2amp" ]; then
	stateok=1
	menuname="AMPLITUDE ALIGNMENT PIAA2"
	
	file="/home/scexao/bin/devices/conf/current_piaa2amp.txt"
	if [ -a $file ]
	then
	    piaa2amp=$(echo "$(cat $file)")
	else
	    piaa2amp="?"
	fi
	
	menuitems=( "10000" " 10000 steps")
	menuitems+=( "5000" " 5000 steps")
	menuitems+=( "2000" " 2000 steps")
	menuitems+=( "1000" " 1000 steps")
	menuitems+=( "500" " 500 steps")
	menuitems+=( "200" " 200 steps")
	menuitems+=( "100" " 100 steps")
	menuitems+=( "50" " 50 steps")
	menuitems+=( "20" " 20 steps")
	menuitems+=( "10" " 10 steps")
	menuitems+=( "5" " 5 steps")
	menuitems+=( "2" " 2 steps")
	menuitems+=( "1" " 1 steps")
	
	dialog --title "Amplitude alignment PIAA1" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item ${piaa2amp} \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	
	case $retval in
	    0)piaa2amp=$(cat $tempfile)
		echo "$piaa2amp" > /home/scexao/bin/devices/conf/current_piaa2amp.txt
		state="menuconf_p2align";; 
	    1) state="menuconfmanage";; 
	    2) state="menuexit";;
	    255) ;; #state="menuexit";;
	esac
    fi

    # ==========================================================
    #  MANUAL ALIGNMENT FIBER
    if [ $state = "menuconf_fiberalign" ]; then
	stateok=1
	menuname="MANUAL ALIGNMENT FIBER"
	
	file="/home/scexao/bin/devices/conf/current_fibamp.txt"
	if [ -a $file ]
	then
	    fibamp=$(echo "$(cat $file)")
	else
	    fibamp="?"
	fi
	
	
	menuitems=(  "0" "Amplitude : $fibamp steps")
	menuitems+=( "-" "")
	menuitems+=( "1" "Move up")
	menuitems+=( "2" "Move down")
	menuitems+=( "3" "Move left")
	menuitems+=( "4" "Move right")
	menuitems+=( "5" "Focus in")
	menuitems+=( "6" "Focus out")
	
	dialog --title "Fiber manual alignment" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item $manualfiberalign \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	choiceval=$(cat $tempfile)
	
	case $retval in
	    0) 	manualfiberalign=$choiceval
		case $choiceval in
		    -) ;;
  		    0) state="menuconf_fibamp";;
		    1)
			((ys[$fibnb]-=$fibamp))
			fibinj_fib y goto ${ys[$fibnb]}
			sleep 0.1
			state="menuconf_fiberalign";;
		    2)
			((ys[$fibnb]+=$fibamp))
			fibinj_fib y goto ${ys[$fibnb]}
			sleep 0.1
			state="menuconf_fiberalign";;
		    3)
			((xs[$fibnb]-=$fibamp))
			fibinj_fib x goto ${xs[$fibnb]}
			sleep 0.1
			state="menuconf_fiberalign";;
		    4) 
			((xs[$fibnb]+=$fibamp))
			fibinj_fib x goto ${xs[$fibnb]}
			sleep 0.1
			state="menuconf_fiberalign";;
		    5)
			((fs[$fibnb]-=$fibamp))
			fibinj_fib f goto ${fs[$fibnb]}
			sleep 0.1
			state="menuconf_fiberalign";;
		    6) 
			((fs[$fibnb]+=$fibamp))
			fibinj_fib f goto ${fs[$fibnb]}
			sleep 0.1
			state="menuconf_fiberalign";;
		esac
		;;
	    1) 
		log "SMI: Fiber aligned"
		state="menuconf_saves";; 
	    2) state="menuexit";;
	    255) ;;#state="menuexit";;
	esac
	
    fi

    # ==========================================================
    #  AMPLITUDE ALIGNMENT FIBER
    if [ $state = "menuconf_fibamp" ]; then
	stateok=1
	menuname="AMPLITUDE ALIGNMENT FIBER"
	
	file="/home/scexao/bin/devices/conf/current_fibamp.txt"
	if [ -a $file ]
	then
	    fibamp=$(echo "$(cat $file)")
	else
	    fibamp="?"
	fi
	
	menuitems=( "10000" " 10000 steps")
	menuitems+=( "5000" " 5000 steps")
	menuitems+=( "2000" " 2000 steps")
	menuitems+=( "1000" " 1000 steps")
	menuitems+=( "500" " 500 steps")
	menuitems+=( "200" " 200 steps")
	menuitems+=( "100" " 100 steps")
	menuitems+=( "50" " 50 steps")
	menuitems+=( "20" " 20 steps")
	menuitems+=( "10" " 10 steps")
	menuitems+=( "5" " 5 steps")
	menuitems+=( "2" " 2 steps")
	menuitems+=( "1" " 1 steps")
	
	dialog --title "Amplitude alignment FPM" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item ${fibamp} \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	
	case $retval in
	    0)fibamp=$(cat $tempfile)
		echo "$fibamp" > /home/scexao/bin/devices/conf/current_fibamp.txt
		state="menuconf_fiberalign";; 
	    1) state="menuconfmanage";; 
	    2) state="menuexit";;
	    255) ;;#state="menuexit";;
	esac
    fi

    # ==========================================================
    #  MANUAL ALIGNMENT CARRIAGE 
    if [ $state = "menuconf_caralign" ]; then
	stateok=1
	menuname="MANUAL ALIGNMENT CARRIAGE"
	
	file="/home/scexao/bin/devices/conf/current_caramp.txt"
	if [ -a $file ]
	then
	    caramp=$(echo "$(cat $file)")
	else
	    caramp="?"
	fi
	
	
	menuitems=(  "0" "Amplitude : $caramp steps")
	menuitems+=( "-" "")
	menuitems+=( "1" "Move in")
	menuitems+=( "2" "Move out")
	
	dialog --title "CARRIAGE manual alignment" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item $manualcaralign \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	choiceval=$(cat $tempfile)
	
	case $retval in
	    0) 	manualcaralign=$choiceval
		case $choiceval in
		    -) ;;
  		    0)
			state="menuconf_caramp";;
		    1)
			((fc[$fibnb]-=$caramp))
			fibinj_car goto ${fc[$fibnb]}
			sleep 0.1
			state="menuconf_caralign";;
		    2) 
			((fc[$fibnb]+=$caramp))
			fibinj_car goto ${fc[$fibnb]}
			sleep 0.1
			state="menuconf_caralign";;
		esac
		;;
	    1) 
		log "SMI: Carriage moved"
		state="menuconf_savec";; 
	    2) state="menuexit";;
	    255) ;;#state="menuexit";;
	esac
	
    fi

    # ==========================================================
    #  AMPLITUDE ALIGNMENT CARRIAGE
    if [ $state = "menuconf_caramp" ]; then
	stateok=1
	menuname="AMPLITUDE ALIGNMENT CARRIAGE"
	
	file="/home/scexao/bin/devices/conf/current_caramp.txt"
	if [ -a $file ]
	then
	    caramp=$(echo "$(cat $file)")
	else
	    caramp="?"
	fi
	
	menuitems=( "10000000" " 10000000 steps")
	menuitems+=( "5000000" " 5000000 steps")
	menuitems+=( "2000000" " 2000000 steps")
	menuitems+=( "1000000" " 1000000 steps")
	menuitems+=( "500000" " 500000 steps")
	menuitems+=( "200000" " 200000 steps")
	menuitems+=( "100000" " 100000 steps")
	
	dialog --title "Amplitude alignment CARRIAGE" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item ${caramp} \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	
	case $retval in
	    0)caramp=$(cat $tempfile)
		echo "$caramp" > /home/scexao/bin/devices/conf/current_caramp.txt
		state="menuconf_caralign";; 
	    1) state="menuconfmanage";; 
	    2) state="menuexit";;
	    255) ;;#state="menuexit";;
	esac
    fi

# ==========================================================
    #  MANUAL ALIGNMENT IRSPECTRO FIBER
    if [ $state = "menuconf_spectrofibalign" ]; then
	stateok=1
	menuname="MANUAL ALIGNMENT IR SPECTRO FIBER"
	
	file="/home/scexao/bin/devices/conf/current_spectrofibamp.txt"
	if [ -a $file ]
	then
	    spectrofibamp=$(echo "$(cat $file)")
	else
	    spectrofibamp="?"
	fi
	
	
	menuitems=(  "0" "Amplitude : $spectrofibamp mm")
	menuitems+=( "-" "")
	menuitems+=( "1" "Move up")
	menuitems+=( "2" "Move down")
	menuitems+=( "3" "Move left")
	menuitems+=( "4" "Move right")
	menuitems+=( "5" "Focus in")
	menuitems+=( "6" "Focus out")
	
	dialog --title "IR Spectro Fiber manual alignment" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item $spectrofibalign \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	choiceval=$(cat $tempfile)
	
	case $retval in
	    0) 	spectrofibalign=$choiceval
		case $choiceval in
		    -) ;;
  		    0) state="menuconf_spectrofibamp";;
		    1)
			yi[${ss[$fibnb]}]=$(echo "scale=2; ${yi[${ss[$fibnb]}]}-$spectrofibamp" | bc)
			irspectro_fib y goto ${yi[${ss[$fibnb]}]}
			sleep 0.1
			state="menuconf_spectrofibalign";;
		    2)
			yi[${ss[$fibnb]}]=$(echo "scale=2; ${yi[${ss[$fibnb]}]}+$spectrofibamp" | bc)
			irspectro_fib y goto ${yi[${ss[$fibnb]}]}
			sleep 0.1
			state="menuconf_spectrofibalign";;
		    3)
			xi[${ss[$fibnb]}]=$(echo "scale=2; ${xi[${ss[$fibnb]}]}-$spectrofibamp" | bc)
			irspectro_fib x goto ${xi[${ss[$fibnb]}]}
			sleep 0.1
			state="menuconf_spectrofibalign";;
		    4) 
			xi[${ss[$fibnb]}]=$(echo "scale=2; ${xi[${ss[$fibnb]}]}+$spectrofibamp" | bc)
			irspectro_fib x goto ${xi[${ss[$fibnb]}]}
			sleep 0.1
			state="menuconf_spectrofibalign";;
		    5)
			fj[${ss[$fibnb]}]=$(echo "scale=2; ${fj[${ss[$fibnb]}]}-$spectrofibamp" | bc)
			irspectro_col goto ${fj[${ss[$fibnb]}]}
			sleep 0.1
			state="menuconf_spectrofibalign";;
		    6) 
			fj[${ss[$fibnb]}]=$(echo "scale=2; ${fj[${ss[$fibnb]}]}+$spectrofibamp" | bc)
			irspectro_col goto ${fj[${ss[$fibnb]}]}
			sleep 0.1
			state="menuconf_spectrofibalign";;
		esac
		;;
	    1) 
		log "SMI: IR Spectro Fiber aligned"
		state="menuconf_savei";; 
	    2) state="menuexit";;
	    255) ;;#state="menuexit";;
	esac
	
    fi

    # ==========================================================
    #  AMPLITUDE ALIGNMENT IR SPECTRO FIBER
    if [ $state = "menuconf_spectrofibamp" ]; then
	stateok=1
	menuname="AMPLITUDE ALIGNMENT IR SPECTRO FIBER"
	
	file="/home/scexao/bin/devices/conf/current_spectrofibamp.txt"
	if [ -a $file ]
	then
	    spectrofibamp=$(echo "$(cat $file)")
	else
	    spectrofibamp="?"
	fi
	
	menuitems=( "1.00" " 1 mm")
	menuitems+=( "0.50" " 0.5 mm")
	menuitems+=( "0.20" " 0.2 mm")
	menuitems+=( "0.10" " 0.1 mm")
	menuitems+=( "0.05" " 0.05 mm")
	menuitems+=( "0.02" " 0.02 mm")
	menuitems+=( "0.01" " 0.01 mm")
	
	dialog --title "Amplitude alignment FPM" \
	    --ok-label "Select" \
	    --cancel-label "Back" \
	    --help-button --help-label "Exit" \
	    --default-item ${spectrofibamp} \
	    --menu "$menuname" \
	    50 80 100 "${menuitems[@]}"  2> $tempfile
	
	retval=$?
	
	case $retval in
	    0)spectrofibamp=$(cat $tempfile)
		echo "$spectrofibamp" > /home/scexao/bin/devices/conf/current_spectrofibamp.txt
		state="menuconf_spectrofibalign";; 
	    1) state="menuconfmanage";; 
	    2) state="menuexit";;
	    255) ;;#state="menuexit";;
	esac
    fi

    # ==========================================================
    #  SAVE POSITION PIAA1
    if [ $state = "menuconf_savep1" ]; then
	stateok=1
	
	cp $filep1 /home/scexao/bin/devices/conf/archive/
	rm $filep1
	for i in $(seq 1 $nlp1)
	do
	    printf '%s;%s;%s;%-6s;%-6s;%s\n' ${np1[$i]} ${dp1[$i]} ${ap1[$i]} ${xp1[$i]} ${yp1[$i]} ${cp1[$i]} >> $filep1
	done
	
	echo "saving PIAA1 position"
	piaa1 status
	
	state="menuconfmanage"
    fi

    # ==========================================================
    #  SAVE POSITION PIAA2
    if [ $state = "menuconf_savep2" ]; then
	stateok=1
	
	cp $filep2 /home/scexao/bin/devices/conf/archive/
	rm $filep2
	for i in $(seq 1 $nlp2)
	do
	    printf '%s;%s;%s;%-6s;%-6s;%-6s;%s\n' ${np2[$i]} ${dp2[$i]} ${ap2[$i]} ${xp2[$i]} ${yp2[$i]} ${fp2[$i]} ${cp2[$i]} >> $filep2
	done
	
	echo "saving PIAA2 position"
	piaa2 status
	
	state="menuconfmanage"
    fi

    # ==========================================================
    #  SAVE POSITION FIBER
    if [ $state = "menuconf_saves" ]; then
	stateok=1
	
	cp $files /home/scexao/bin/devices/conf/archive/
	rm $files
	for i in $(seq 1 $nls)
	do
	    printf '%s;%s;%-6s;%-6s;%-6s;%s;%s\n' ${ns[$i]} ${ds[$i]} ${xs[$i]} ${ys[$i]} ${fs[$i]} ${ss[$i]} ${cs[$i]} >> $files
	done

	echo "saving fiber position"
        fibinj_fib status
	
	state="menuconfmanage"
    fi

    # ==========================================================
    #  SAVE POSITION CARIAGE
    if [ $state = "menuconf_savec" ]; then
	stateok=1
	
	cp $filec /home/scexao/bin/devices/conf/archive/
	rm $filec
	for i in $(seq 1 $nlc)
	do
	    printf '%s;%s;%-8s\n' ${nc[$i]} ${dc[$i]} ${fc[$i]} >> $filec
	done

	echo "saving cariage position"
	fibinj_car status
	
	state="menuconfmanage"
    fi

    # ==========================================================
    #  SAVE POSITION IR SPECTRO FIBER
    if [ $state = "menuconf_savei" ]; then
	stateok=1
	
	cp $filei /home/scexao/bin/devices/conf/archive/
	rm $filei
	for i in $(seq 1 $nli)
	do
	    printf '%s;%s;%-6s;%-6s;%s\n' ${ni[$i]} ${di[$i]} ${xi[$i]} ${yi[$i]} ${ci[$i]} >> $filei
	done

	cp $filej /home/scexao/bin/devices/conf/archive/
	rm $filej
	for i in $(seq 1 $nlj)
	do
	    printf '%s;%s;%-4s;%s\n' ${nj[$i]} ${dj[$i]} ${fj[$i]} ${cj[$i]} >> $filej
	done

	echo "saving IR spectro fiber position"
        irspectro_fib status
		irspectro_col status
	
	state="menuconfmanage"
    fi

    # ==========================================================
    # REMOVE SMI
    if [ $state = "menuconfremove" ]; then
	stateok=1
	echo "remove all"
	piaa1 1
	sleep 0.1
	piaa2 1
	sleep 0.1
	fibinj_pickoff out
	sleep 0.1

	log "SMI: Removing the PIAA and pickoff"

	state="menuconfselect"
    fi

    # ==========================================================
    # EXIT MODE
    if [ $state = "menuexit" ]; then
	stateok=1
	echo "exit"
	exit
    fi

    # ==========================================================
    #  ERROR MODE
    if [ $stateok = 0 ]; then
	echo "state \"$state\" not recognized ... exit"
	exit
    fi

done
